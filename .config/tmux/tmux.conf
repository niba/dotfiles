set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'mrjones2014/smart-splits.nvim'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g default-terminal 'tmux-256color'

set -ga terminal-overrides ",*256col*:Tc"
set -ga terminal-overrides ",xterm-kitty:Tc"

set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

set -as terminal-features 'xterm*:extkeys'

set -s extended-keys on
set-option -g focus-events on
set-option -g renumber-windows on
set -sg escape-time 0
setw -g mouse on

# set -g status-right-length 250
set -g history-limit 30000

set -g @catppuccin_flavour 'macchiato'

set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'
# for neovim to restore sessions
set -g @resurrect-restore 'S-r'
set -g @resurrect-processes 'false'

### Pane
set -g base-index 1
setw -g pane-base-index 1
set -g pane-border-format "#{?pane_active,#[reverse],}#{pane_index}#[default] #(sleep 0.5; ps -t #{pane_tty} -o args= | head -n 2 | sed -E -e 's@/opt/homebrew/Cellar/yarn/[0-9]+\.[0-9]+\.[0-9]+/libexec/bin/yarn.js@yarn@' -e 's@/path/to/npm/executable@npm@')"

set pane-active-border-style "fg=#c6a0f6"
set pane-border-style "fg=#654f80"

set -g @catppuccin_window_default_text "#W"
set -g @catppuccin_window_current_text "#W"
# Auto hide pane-border-status line when only one pane is displayed (see tmux/tmux#566)
set-hook -g 'after-new-session'  'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
# set command to hide pane when in nvim
set-hook -g pane-focus-in "run-shell '~/.config/tmux/neovim_hide_pane.sh'"
set-hook -g after-split-window "run-shell '~/.config/tmux/neovim_hide_pane.sh'"
###

# prefix
set-option -g prefix C-a
unbind C-b
# unbind keys
unbind-key w 
unbind-key q 
unbind-key t
unbind-key d
unbind-key C-z
unbind-key p

bind r source-file ~/.config/tmux/tmux.conf
bind-key 'C-d' detach-client
bind-key q choose-window
bind-key -n Escape send-keys Escape

bind-key s setw synchronize-panes
bind S choose-session
bind c new-window -c "#{pane_current_path}"
bind u split-window -p 30 -c "#{pane_current_path}"
bind v split-window -p 50 -h -c "#{pane_current_path}"

bind w display-panes  # TODO doesnt work
bind -r C-Tab last-window
bind -n 'C-S-h' previous-window
bind -n 'C-S-l' next-window
bind -n 'C-S-n' previous-window
bind -n 'C-S-o' next-window

# clear screen
bind C-l send-keys 'C-l'

# vim mappings
source-file "~/.config/tmux/tmux_vim.conf"

bind-key -n C-0 select-window -t :0
bind-key -n C-1 select-window -t :1
bind-key -n C-2 select-window -t :2
bind-key -n C-3 select-window -t :3
bind-key -n C-4 select-window -t :4
bind-key -n C-5 select-window -t :5
bind-key -n C-6 select-window -t :6
bind-key -n C-7 select-window -t :7
bind-key -n C-8 select-window -t :8
bind-key -n C-9 select-window -t :9

TMUX_FZF_LAUNCH_KEY="C-f"
TMUX_FZF_PREVIEW_OPTIONS="--preview-window=top:wrap --bind 'ctrl-d:preview-page-down,ctrl-u:preview-page-up'"
TMUX_FZF_OPTIONS="-p -w 90% -h 80% -m"
bind-key -r f run-shell -b "~/.config/tmux/sessions.sh switch"

# Windows(panes) bindings
bind-key -T prefix w switch-client -T window_table
bind-key -T prefix 'C-w' switch-client -T window_table
bind-key -T window_table p last-pane; switch-client -T root
bind-key -T window_table w last-pane; switch-client -T root
bind-key -T window_table g display-panes
bind-key -T window_table q switch-client -T root
bind-key -T window_table d kill-pane
bind-key -T window_table t kill-pane -a
bind-key -T window_table h split-window -v
bind-key -T window_table v split-window -h
bind-key -T window_table c split-window -h

bind-key -T window_table l select-layout -n

bind-key -r -T window_table 1 select-pane -t :.1
bind-key -r -T window_table 2 select-pane -t :.2
bind-key -r -T window_table 3 select-pane -t :.3
bind-key -r -T window_table 4 select-pane -t :.4
bind-key -r -T window_table 5 select-pane -t :.5
bind-key -r -T window_table 6 select-pane -t :.6
bind-key -r -T window_table 7 select-pane -t :.7
bind-key -r -T window_table 8 select-pane -t :.8
bind-key -r -T window_table 9 select-pane -t :.9
  
# Tabs bindings
bind-key -T prefix t switch-client -T tab_table
bind-key -T prefix 'C-t' switch-client -T tab_table
bind-key -T tab_table p last-window
bind-key -T tab_table t last-window
bind-key -T tab_table c new-window -a
bind-key -T tab_table d kill-window
bind-key -T tab_table q switch-client -T root
bind-key -T tab_table r command-prompt "rename-window '%%'"

bind p if-shell 'test $(tmux list-panes | wc -l) -gt 1' 'last-pane' 'last-window'
bind-key 'C-p' run-shell "~/.config/tmux/last_session.sh"

bind-key m display-popup -w 80% -E "navi --print"
bind-key -r F display-popup -E "sh ~/scripts/tmux-sessionizer"
bind-key -r C-e display-popup -d "#{pane_current_path}" "sh ~/.config/tmux/worktrees.sh"
bind-key g display-popup -E -h 90% -w 90% -d '#{pane_current_path}' "sh ~/.config/tmux/git_jj.sh"
bind-key / run-shell "sh ~/.config/tmux/toggle_pane_neovim.sh"

# quick sessions
bind-key e switch-client -t dotfiles
bind-key n switch-client -t notes

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/tmux/plugins/'
run '~/.config/tmux/plugins/tpm/tpm'
display-message "Tmux reloaded"

source-file "~/.config/tmux/tmux_status.conf"
