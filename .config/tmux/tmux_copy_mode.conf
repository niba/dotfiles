%hidden NORMAL=0
%hidden VISUAL=1
%hidden VISUAL_LINE=2
%hidden VISUAL_BLOCK=3

%hidden IS_COPY_MODE="#{==:#{pane_mode},copy-mode}"

set-option -g @mode $NORMAL

# emacs status keys are better, you can cancel search / command using Escape etc
# https://github.com/tmux/tmux/issues/2426
set -wg status-keys emacs
# Vim-copy mode 
set-window-option -g mode-keys vi
bind y copy-mode 
bind-key -n F4 copy-mode 
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}'   '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}'   '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}'   '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}'   '' 'select-pane -R'

bind-key -T copy-mode-vi 'C-n' if -F '#{pane_at_left}'   '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-e' if -F '#{pane_at_bottom}'   '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-i' if -F '#{pane_at_top}'   '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-o' if -F '#{pane_at_right}'   '' 'select-pane -R'

bind-key -T copy-mode-vi C-c if-shell -F '#{selection_present}' {
  send-keys -X rectangle-off
  send-keys -X clear-selection
  set-option -g @mode $NORMAL
} {
  send-keys -X cancel
  set-option -g @mode $NORMAL
}
bind-key -T copy-mode-vi Escape if-shell -F '#{selection_present}' {
  send-keys -X rectangle-off
  send-keys -X clear-selection
  set-option -g @mode $NORMAL
} {
  send-keys -X cancel
  set-option -g @mode $NORMAL
}

bind-key -T copy-mode-vi q {
  send-keys -X cancel
  set-option -g @mode $NORMAL
}
# `y` yank and exit copy mode.
bind-key -T copy-mode-vi y {
  send-keys -X copy-pipe-and-cancel clip
    set-option -g @mode $NORMAL
}

bind-key -T copy-mode-vi -r C-b {
  send-keys -X start-of-line
  send-keys -X search-backward "❯"
  send-keys -X cursor-right
  send-keys -X cursor-right
}
bind-key -T copy-mode-vi -r C-f {
  send-keys -X end-of-line
  send-keys -X search-forward "❯"
  send-keys -X cursor-right
  send-keys -X cursor-right
}

# Override default for `v` (`send-keys -X rectangle-toggle`).
bind-key -T copy-mode-vi v if-shell -F '#{selection_present}' {
  if-shell -F '#{||:#{==:#{@mode},#{VISUAL_BLOCK}},#{==:#{@mode},#{VISUAL_LINE}}}' {
# If in VISUAL_BLOCK or VISUAL_LINE mode, go to vanilla VISUAL mode.
    send-keys -X rectangle-off
    set-option -g @mode $VISUAL
  } {
# We appear to be in VISUAL mode; go back to NORMAL mode.
    send-keys -X rectangle-off
    send-keys -X clear-selection
    set-option -g @mode $NORMAL
  }
} {
# If in NORMAL mode, start VISUAL mode.
  send-keys -X rectangle-off
  send-keys -X begin-selection
  set-option -g @mode $VISUAL
}

# Ditto for C-v.
bind-key -T copy-mode-vi C-v if-shell -F '#{selection_present}' {
  if-shell -F '#{||:#{==:#{@mode},#{VISUAL}},#{==:#{@mode},#{VISUAL_LINE}}}' {
# If in VISUAL or VISUAL_LINE mode, go to VISUAL_BLOCK mode.
    send-keys -X rectangle-on
    set-option -g @mode $VISUAL_BLOCK
  } {
# We appear to be in VISUAL_BLOCK mode; go back to NORMAL mode.
    send-keys -X rectangle-off
    send-keys -X clear-selection
    set-option -g @mode $NORMAL
  }
} {
# If in NORMAL mode, start VISUAL_BLOCK mode.
  send-keys -X rectangle-on
  send-keys -X begin-selection
  set-option -g @mode $VISUAL_BLOCK
}

# Similar for `V`.
bind-key -T copy-mode-vi V if-shell -F '#{selection_present}' {
  if-shell -F '#{||:#{==:#{@mode},#{VISUAL}},#{==:#{@mode},#{VISUAL_BLOCK}}}' {
# If in VISUAL or VISUAL_BLOCK mode, go to VISUAL_LINE mode.
# (Sadly, doesn't exactly match Vim's behavior, because it starts a new
# linewise selection instead of adjusting the existing selection.)
    send-keys -X rectangle-off
    send-keys -X select-line
    set-option -g @mode $VISUAL_LINE
  } {
# We appear to be in VISUAL_LINE mode; go back to NORMAL mode.
    send-keys -X clear-selection
    set-option -g @mode $NORMAL
  }
} {
# If in NORMAL mode, start VISUAL_LINE mode.
  send-keys -X rectangle-off
  send-keys -X select-line
  set-option -g @mode $VISUAL_LINE
}

bind-key -T copy-mode-vi / command-prompt -i -I "#{pane_search_string}" -T search -p "(search down)" {
  send-keys -X search-forward-incremental "%%"
}
bind-key -T copy-mode-vi ? command-prompt -i -I "#{pane_search_string}" -T search -p "(search up)" {
  send-keys -X search-backward-incremental "%%"
}

%hidden COPY_MODE_MARKER="#[align=left#,fg=#b7bdf8#,bg=black]  -- COPY --  #[default]"
%hidden COPY_MODE_LEFT="$COPY_MODE_MARKER"
%hidden HAS_SEARCH_RESULT="#{&&:#{e|>|:#{search_count},0},#{search_present}}"
%hidden RESULT_OR_RESULTS="result#{?#{==:#{search_count},1},,s}"
%hidden RESULT_COUNT_IS_PARTIAL="#{e|>|:#{search_count_partial},0}"
%hidden SEARCH_RESULT_COUNT="(#{search_count}#{?$RESULT_COUNT_IS_PARTIAL,+,} $RESULT_OR_RESULTS)"
%hidden OFFSET_FROM_TOP="#{e|-|:#{history_size},#{scroll_position}}"
%hidden COPY_MODE_LOCATION="[$OFFSET_FROM_TOP/#{history_size}]"
%hidden COPY_MODE_CENTER="#[align=centre#,bg=black]#[default]"

%hidden COPY_MODE_RIGHT="#[align=right#,bg=black]  #{?$HAS_SEARCH_RESULT,$SEARCH_RESULT_COUNT  ,}$COPY_MODE_LOCATION  #[default]"
%hidden PANE_FORMAT="#{?pane_active,#[reverse],}#{pane_index}#[default] #($PROCESS_CMD)"
set-option -g pane-border-format "#{?$IS_COPY_MODE,$COPY_MODE_LEFT$COPY_MODE_CENTER$COPY_MODE_RIGHT,$PANE_FORMAT}"
set-option -g pane-border-lines single
set-option -g pane-border-status top

set -g copy-mode-position-format ""

# Hook to change position when entering copy mode
# set-hook -g pane-mode-changed 'if -F "#{s/copy-mode//;#{pane_mode}}" "" "set -g pane-border-status bottom"'
# set-hook -g pane-mode-changed 'if-shell "test \"#{pane_mode}\" = \"copy-mode\"" "set -g pane-border-status top" "set -g pane-border-status off"'
# set-hook -g pane-mode-changed "if -F \"$IS_COPY_MODE\" \"set -g pane-border-status top\" \"set -g pane-border-status off\""

# Hook to restore position when exiting copy mode  
# set-hook -g pane-mode-changed 'if -F "#{s/copy-mode//;#{pane_mode}}" "set -g pane-border-status top" ""'
# Use the variables in your format
# set-option -g pane-border-format "#{?$IS_COPY_MODE,$COPY_FORMAT,$PANE_FORMAT}"
