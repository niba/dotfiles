#!/bin/sh

yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

echo "Loadead script addition"

yabai -m config                                 \
  external_bar                 off:40:0       \
  menubar_opacity              1.0            \
  mouse_follows_focus          off            \
  focus_follows_mouse          off            \
  display_arrangement_order    default        \
  window_origin_display        default        \
  window_placement             second_child   \
  window_insertion_point       focused        \
  window_zoom_persist          on             \
  window_shadow                off            \
  window_animation_duration    0.0            \
  window_animation_easing      ease_out_circ  \
  window_opacity_duration      0.0            \
  active_window_opacity        1.0            \
  normal_window_opacity        0.9           \
  window_opacity               off            \
  insert_feedback_color        0xffd75f5f     \
  split_ratio                  0.50           \
  split_type                   auto           \
  auto_balance                 off            \
  layout                       stack            \
  mouse_modifier               fn             \
  mouse_action1                move           \
  mouse_action2                resize         \
  top_padding                  04             \
  bottom_padding               04             \
  left_padding                 04             \
  right_padding                04             \
  window_gap                   02             \
  mouse_drop_action            stack

# debug info, run yabai in terminal to see logs
~/.config/yabai/debug.nu
~/.config/yabai/setup.nu
~/.config/yabai/rules.nu

# yabai -m signal --add event=window_destroyed active=yes action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse &> /dev/null || yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id) &> /dev/null"
# yabai -m signal --add event=window_minimized active=yes action="if \$(yabai -m query --windows --window \$YABAI_WINDOW_ID | jq -r '.\"is-floating\"'); then yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse &> /dev/null || yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id) &> /dev/null; fi"
# yabai -m signal --add event=window_destroyed active=yes action="yabai -m query --windows id --window &> /dev/null || yabai -m window --focus mouse &> /dev/null || yabai -m window --focus \$(yabai -m query --windows id,scratchpad,is-minimized --space | jq -re 'map(select(.scratchpad == \"\" and .\"is-minimized\" == false))' | jq -r '.[0].id') &> /dev/null"
# yabai -m signal --add event=window_minimized active=yes action="yabai -m query --windows id --window &> /dev/null || yabai -m window --focus mouse &> /dev/null || yabai -m window --focus \$(yabai -m query --windows id,scratchpad,is-minimized --space | jq -re 'map(select(.scratchpad == \"\" and .\"is-minimized\" == false))' | jq -r '.[0].id') &> /dev/null"
# yabai -m signal --add event=application_front_switched action="nu ~/.config/yabai/yabai_stack_on_moved.nu"
# yabai -m signal --add event=window_focused action="nu ~/.config/yabai/smart_stack.nu"


# ~/.config/yabai/setup_spaces.nu

  

# yabai -m config layout stack
#
# yabai -m config window_animation_duration    0.0
# yabai -m config mouse_follows_focus on

function yabai_rule {
  yabai -m rule --add "$@"
  yabai -m rule --apply "$@"
}

# yabai_rule app="^.*$" space=dev_work_left
# yabai_rule app="kitty$" space=dev_work_middle
# yabai_rule app="Code" space=dev_work_middle
# yabai_rule app="Chrome$" space=dev_work_middle
#
# yabai_rule app="Arc$" space=dev_work_right

# yabai -m signal --add event=window_created app="^Arc$" action="~/.config/yabai/yabai_arc_rules.sh"
#
# yabai_rule app="Brave Browser" space=browser
# yabai_rule app="Microsoft Edge" space=browser
#
# yabai_rule app="Notion$" space=productivity
# yabai_rule app="Obsidian" space=productivity
#
# yabai_rule app="Chromium$" space=other
# yabai_rule app="Electron$" space=other
# yabai_rule app="Microsoft Teams" space=other
# yabai_rule app="Figma" space=other
# yabai_rule app="QuickGPT" space=other
# yabai_rule app="Discord$" space=other
# yabai_rule app="Bazecor$" space=other
# yabai_rule app="Spotify$" space=other
# yabai_rule app="Toggl Track" space=other
# yabai_rule app="Messenger" space=other
# yabai_rule app="Bitwarden" space=other
#
# yabai_rule app="pgAdmin 4" space=helper
# yabai_rule app="xStation5" space=helper
# yabai_rule app="TradingView" space=helper
# yabai_rule app="RedisInsight-v2" space=helper
# yabai_rule app="Postman" space=helper
#
# yabai_rule app="^System Preferences$" manage=off sub-layer=normal
# yabai_rule app="^System Settings$" manage=off sub-layer=normal
# yabai_rule app="^Finder$" manage=off sub-layer=normal
# yabai_rule app="Activity Monitor" manage=off sub-layer=normal
# yabai_rule app="^Raycast$" manage=off sub-layer=normal
# yabai_rule app="Calendar&" manage=off sub-layer=normal
# yabai_rule app="Calculator$" manage=off sub-layer=normal
# yabai_rule app="Notes$" scratchpad=notes 
# yabai_rule app="Mouseless$" manage=off sub-layer=normal
# yabai_rule app="League of Legends$" manage=off sub-layer=normal
# yabai_rule app="Steam Helper" manage=off sub-layer=normal
# yabai_rule app="1Password" manage=off sub-layer=normal

# yabai -m rule --add app="^.*$" space=other
yabai -m rule --apply

borders active_color=0xff775759 inactive_color=0xff555555 width=5.0 &
